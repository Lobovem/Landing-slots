/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"Inter";
  font-weight:400;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Inter-Regular-400.woff2") format("woff2");
}
@font-face{
  font-family:"Oswald";
  font-weight:600;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Oswald-VariableFont_wght.woff2") format("woff2");
}
@font-face{
  font-family:"Montserrat";
  font-weight:700;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Montserrat-VariableFont_wght.woff2") format("woff2");
}
@font-face{
  font-family:"Montserrat";
  font-weight:800;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Montserrat-Italic-VariableFont_wght.woff2") format("woff2");
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"Oswald", sans-serif;
  font-size:16px;
  font-weight:normal;
  font-style:normal;
}

a{
  text-decoration:none;
  color:#000000;
}

.body{
  background:#01023D;
}

.layout__main{
  width:min(100% - 80px, 1640px);
  margin-inline:auto;
}
.layout__main--alt{
  margin-top:-170px;
}
.decor{
  position:relative;
}
.decor__left{
  position:absolute;
  z-index:2;
  top:-143px;
  left:-28px;
  left:0;
  background:#FF00E5;
  mix-blend-mode:soft-light;
  filter:blur(127.5px);
  width:860px;
  height:860px;
}
.decor__right{
  position:absolute;
  z-index:2;
  left:0;
  right:0;
  top:0;
  bottom:0;
  background:linear-gradient(218.96deg, #00013A 27.46%, rgba(0, 1, 58, 0) 79.19%);
}
.decor__main{
  position:relative;
  background-image:url(../img/background-main-foto.png);
  background-repeat:no-repeat;
  background-position:50% 0;
  background-size:cover;
  z-index:5;
}
.decor__main::before{
  position:absolute;
  z-index:5;
  right:0;
  bottom:-2px;
  left:0;
  height:270px;
  content:"";
  background:linear-gradient(360deg, #01023D 0%, rgba(1, 2, 61, 0.79) 38.02%, rgba(1, 2, 61, 0) 96.87%);
}

.actions{
  display:flex;
  flex-direction:column;
  z-index:11;
}
.actions__logo{
  max-width:294px;
  margin-bottom:100px;
}
.actions__title{
  font-family:"Montserrat", sans-serif;
  font-weight:700;
  font-size:40px;
  line-height:49px;
  letter-spacing:0.05em;
  color:#FCCA2F;
  text-shadow:0px 0px 0px #FCC931;
}
.actions__desc{
  font-family:"Oswald", sans-serif;
  font-style:normal;
  font-weight:600;
  font-size:118px;
  line-height:100%;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#ffffff;
}
.actions__link-box{
  position:relative;
  z-index:10;
  display:flex;
  align-items:center;
  justify-content:center;
  width:505px;
  min-height:126px;
  background:linear-gradient(180deg, #FBA92E 0%, #FBDA2E 100%);
  box-shadow:0px 24px 60px rgba(252, 205, 47, 0.52), inset 0px 4px 17px rgba(255, 255, 255, 0.45);
  border-radius:86px;
}
.actions__link{
  padding:10px;
  cursor:pointer;
  transition:0.2s linear;
  border:none;
  font-family:"Montserrat", sans-serif;
  font-weight:800;
  font-size:46px;
  line-height:56px;
  text-align:center;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#0F101B;
}
.header{
  position:relative;
}
.header__wrap{
  position:relative;
  padding-top:60px;
}
.header__wrap:before{
  position:absolute;
  content:"";
  bottom:0;
  left:30%;
  width:945px;
  height:705px;
  background:#FF00E5;
  mix-blend-mode:soft-light;
  filter:blur(127.5px);
  z-index:1;
}
.header__wrap::after{
  position:absolute;
  content:"";
  bottom:-100px;
  left:0%;
  width:945px;
  height:945px;
  background:#00A3FF;
  mix-blend-mode:soft-light;
  filter:blur(127.5px);
  z-index:1;
}
.header__contant{
  position:relative;
  z-index:3;
  display:flex;
  align-items:start;
  gap:15px;
}
.header__contant:after{
  position:absolute;
  content:"";
  bottom:0;
  left:50%;
  transform:translateX(-50%);
  width:945px;
  height:945px;
  background:#4351D0;
  opacity:0.3;
  filter:blur(127.5px);
  z-index:3;
}
.header__img-box{
  position:relative;
  z-index:11;
}
.header__img-box::after{
  position:absolute;
  content:"";
  z-index:-1;
  background:#FF00E5;
  mix-blend-mode:soft-light;
  filter:blur(127.5px);
  width:400px;
  height:150px;
  right:0;
  bottom:200px;
}
.header__img-box:before{
  position:absolute;
  content:"";
  width:225px;
  height:225px;
  top:300px;
  background:#FCB82F;
  filter:blur(75px);
  transform:matrix(-1, 0, 0, 1, 0, 0);
}
.header__img{
  position:relative;
  display:inline-block;
  max-width:600px;
}
.header__item-wrap{
  position:relative;
  z-index:3;
}

.item__wrap{
  position:relative;
  z-index:6;
  display:grid;
  margin-bottom:90px;
  gap:20px;
  grid-template-columns:repeat(4, 1fr);
}
.item__box-first{
  display:flex;
  align-items:flex-end;
  justify-content:center;
  height:100%;
}
.item__box-second{
  display:flex;
  align-items:flex-start;
  justify-content:center;
  height:100%;
}
.item__box{
  display:flex;
  align-items:center;
  flex-direction:column;
  min-height:320px;
  padding:10px 10px 10px 10px;
  gap:40px;
}
.item__img{
  display:flex;
  max-width:80px;
}
.item__title{
  max-width:254px;
  text-align:center;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#ffffff;
  font-size:32px;
  font-weight:500;
  line-height:120%;
}

.footer__wrap{
  display:flex;
  align-items:center;
  padding-top:54px;
  padding-bottom:80px;
  gap:60px;
}
.footer__img{
  max-width:213px;
}
.footer__decs{
  letter-spacing:0.05em;
  text-transform:capitalize;
  color:#6d6d71;
  font-size:18px;
  font-weight:400;
  line-height:160%;
}

.slider{
  position:relative;
}
.slider__wrap{
  margin-bottom:38px;
}
.slider__item{
  display:flex;
  align-items:center;
  justify-content:center;
  min-width:0;
  min-height:177px;
  padding:10px 10px;
  background:#1D1E60;
  border-radius:4px;
}
.slider__img{
  max-width:80%;
}
.slider .swiper-wrapper{
  padding-bottom:25px;
}
.slider .swiper-pagination-bullet{
  width:14px;
  height:14px;
  background:#36403c;
}
.slider .swiper-pagination-bullet-active{
  background:#fbbf2f;
}
@media (min-height: 1000.8px){
  .header__img{
    max-width:650px;
  }
}
@media (min-height: 1050.8px){
  .header__img{
    max-width:700px;
  }
}
@media (min-width: 1100px){
  .header__contant{
    justify-content:space-between;
  }
}
@media (min-height: 1100.8px){
  .header__img{
    max-width:730px;
  }
}
@media (min-width: 1100.8px){
  .header__contant{
    height:100vh;
    min-height:950px;
    max-height:1200px;
  }
}
@media (min-height: 1150.8px){
  .header__img{
    max-width:760px;
  }
}
@media (max-width: 1920.8px){
  .actions__desc{
    margin-bottom:74px;
  }
}
@media (max-width: 1600px){
  .slider__item{
    min-height:119px;
  }
}
@media (max-width: 1500.8px){
  .decor__main::before{
    height:80px;
  }
}
@media (max-width: 1499.8px){
  .actions__desc{
    font-size:90px;
    line-height:120%;
  }
  .actions__link-box{
    width:370px;
    min-height:94px;
  }
  .actions__link{
    font-size:36px;
    line-height:44px;
  }
  .header__img-box{
    margin-left:40px;
  }
  .header__img{
    max-width:520px;
  }
  .item__wrap{
    margin-bottom:54px;
  }
  .item__box{
    min-height:280px;
  }
  .item__img{
    max-width:70px;
  }
  .item__title{
    max-width:191px;
    font-size:24px;
  }
  .footer__wrap{
    padding-bottom:30px;
    gap:20px;
  }
  .footer__img{
    max-width:203px;
  }
  .footer__decs{
    font-size:16px;
  }
}
@media (max-width: 1350.8px){
  .actions__title{
    font-size:26px;
  }
}
@media (max-width: 1100px){
  .slider__img{
    max-width:90%;
  }
}
@media (max-width: 1099.8px){
  .actions__title{
    font-size:16px;
    line-height:20px;
  }
  .actions__desc{
    max-width:440px;
    margin-bottom:20px;
  }
  .actions__link-box{
    width:266px;
    min-height:66px;
  }
  .actions__link{
    font-size:24px;
    line-height:29px;
  }
  .header__contant{
    justify-content:space-around;
  }
  .header__img{
    max-width:350px;
  }
  .item__wrap{
    grid-template-columns:repeat(2, 1fr);
  }
  .footer__wrap{
    flex-direction:column;
    padding-bottom:20px;
    gap:15px;
  }
  .footer__img{
    order:1;
  }
  .footer__decs{
    order:0;
    text-align:center;
  }
}
@media (max-width: 849.8px){
  .layout__main{
    width:min(100% - 40px, 1640px);
  }
  .decor__main::before{
    height:50px;
  }
  .actions__desc{
    font-size:48px;
  }
  .header__img{
    max-width:275px;
  }
  .item__wrap{
    margin-bottom:20px;
  }
  .footer__img{
    max-width:125px;
  }
  .slider::before{
    position:absolute;
    z-index:10;
    top:0;
    right:0;
    bottom:0;
    width:80px;
    content:"";
    background:linear-gradient(271.23deg, #01023D 1.23%, rgba(1, 2, 61, 0) 99.13%);
  }
  .slider__item{
    min-height:107px;
  }
  .slider__img{
    max-width:80%;
  }
}
@media (max-width: 810px){
  .slider__img{
    max-width:100%;
  }
}
@media (max-width: 620.8px){
  .decor__main{
    background-position:50% 0;
    background-size:200%;
  }
  .item__box{
    min-height:180px;
    gap:20px;
  }
  .item__img{
    max-width:40px;
  }
  .item__title{
    max-width:127px;
    font-size:16px;
  }
  .footer__wrap{
    padding-top:20px;
  }
  .footer__decs{
    font-size:12px;
  }
  .slider .swiper-wrapper{
    padding-bottom:15px;
  }
  .slider .swiper-pagination-bullet{
    width:8px;
    height:8px;
  }
}
@media (max-width: 585.8px){
  .header__contant{
    justify-content:center;
  }
  .header__img-box{
    display:none;
  }
}
@media (max-width: 585.2px){
  .actions__link-box{
    width:280px;
  }
}
@media (max-width: 520px){
  .slider__img{
    max-width:90%;
    height:50px;
  }
}
@media (max-width: 479.8px){
  .actions__title{
    margin-bottom:10px;
    font-size:20px;
    line-height:24px;
  }
  .actions__desc{
    max-width:390px;
    margin-bottom:10px;
  }
  .actions__desc span{
    font-size:80px;
  }
  .footer__img{
    max-width:103px;
  }
  .slider__item{
    min-height:78px;
  }
}
@media (max-width: 419.8px){
  .item__wrap{
    margin-bottom:24px;
    gap:10px;
  }
  .item__box{
    min-height:138px;
  }
  .item__img{
    max-width:35px;
  }
  .item__title{
    max-width:111px;
    font-size:14px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */